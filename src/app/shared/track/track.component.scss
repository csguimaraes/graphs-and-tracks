$track-color: #333;
$base-color: #333;

// TODO: these variables should be retrieved from JSON
// since they affect the track calulations
$track-width: 10;
$ball-radius: 10;
$ball-stroke: 4;

:host {
  display: block;
}

svg {
  width: 100%;
  height: 100%;
  overflow: visible;
}

svg /deep/ {
  .track-line, .track-outline {
    fill: none;
    stroke: $track-color;
    stroke-width: $track-width;
    stroke-linejoin: round;
  }

  .track-line {
    // fill: #F0F0F0;
  }

  .track-outline {
    opacity: .5;
  }

  .post {
    fill: $track-color;
  }

  .post-incrementer {
    cursor: pointer;
    fill: rgba(0, 0, 0, 0);
  }

  .post-dragger {
    cursor: ns-resize;
    fill: rgba(0, 0, 0, 0);
  }

  .post-base {
    fill: $base-color;
    cursor: pointer;
    &:hover {
      fill: lighten($base-color, 20);
    }
  }

  .post-height-label {
    pointer-events: none !important;
    fill: white;
  }

  circle#ball {
    fill: crimson;
    stroke-width: 3px;
    stroke-dashoffset: 0;
    stroke: #800;
    cursor: move !important;
    // R = 10, N = 5, GAP = 2x
    // ((Math.PI * 2 * R) / N) - GAP
    stroke-dasharray: 13.079644737231007px 2px;
    shape-rendering: geometricPrecision !important;
    :host.rolling & {
      shape-rendering: optimizeSpeed !important;
    }
  }

  path#ramp-error {
    fill: rgba(255,0,0,.3);
    stroke: orange;
    stroke-width: 2px;
    stroke-dasharray: 10 5;
    animation: dashing 1.5s linear infinite, pulse 1.5s linear infinite;
  }

  path.post-highlight {
    fill: #CFE;
    stroke: dodgerblue;
    stroke-width: 2px;
    stroke-dasharray: 10 5;
    animation: dashing 2s linear infinite, pulse 2s linear infinite;
    pointer-events: none !important;
  }
}
